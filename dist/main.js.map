{"version":3,"file":"main.js","mappings":";;;;;;;;;;;;;;AAAO,SAASA,YAAYA,CAACC,KAAK,EAAE;EAChCA,KAAK,CAACC,cAAc,EAAE;;EAEtB;EACA,IAAIC,QAAQ,GAAGC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAACC,KAAK;EACpDC,YAAY,CAACJ,QAAQ,CAAC;EAEtBK,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;EACrCC,KAAK,CAAC,4BAA4B,CAAC,CAClCC,IAAI,CAAC,UAAAC,GAAG;IAAA,OAAIA,GAAG,CAACC,IAAI,EAAE;EAAA,EAAC,CACvBF,IAAI,CAAC,UAASC,GAAG,EAAE;IAChBR,QAAQ,CAACC,cAAc,CAAC,SAAS,CAAC,CAACS,SAAS,GAAGF,GAAG,CAACG,OAAO;EAC9D,CAAC,CAAC;AACN;AAAC;;;;;;;;;;;;;;ACbM,SAASR,YAAYA,CAACS,SAAS,EAAE;EACpCR,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEO,SAAS,CAAC;EACtD,IAAIC,KAAK,GAAG,CACR,QAAQ,EACR,SAAS,EACT,MAAM,EACN,QAAQ,EACR,UAAU,CACb;EAED,IAAGA,KAAK,CAACC,QAAQ,CAACF,SAAS,CAAC,EAAE;IAC1BG,KAAK,CAAC,mBAAmB,CAAC;EAC9B;AACJ;AAAC;;;;;;UCbD;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;ACN+C;AACA;AAE/CX,OAAO,CAACC,GAAG,CAACF,yDAAY,CAAC;AAEzBY,KAAK,CAAC,SAAS,CAAC,C","sources":["webpack://webpacknlp.udacityproject/./src/client/js/formHandler.js","webpack://webpacknlp.udacityproject/./src/client/js/nameChecker.js","webpack://webpacknlp.udacityproject/webpack/bootstrap","webpack://webpacknlp.udacityproject/webpack/runtime/define property getters","webpack://webpacknlp.udacityproject/webpack/runtime/hasOwnProperty shorthand","webpack://webpacknlp.udacityproject/webpack/runtime/make namespace object","webpack://webpacknlp.udacityproject/./src/client/index.js"],"sourcesContent":["export function handleSubmit(event) {\n    event.preventDefault() \n\n    // check what text was put into the form field\n    let formText = document.getElementById('name').value\n    checkForName(formText)\n\n    console.log(\"::: Form Submitted :::\")\n    fetch('http://localhost:8080/test')\n    .then(res => res.json())\n    .then(function(res) {\n        document.getElementById('results').innerHTML = res.message\n    })\n};\n\n","export function checkForName(inputText) {\n    console.log(\"::: Running checkForName :::\", inputText);\n    let names = [\n        \"Picard\",\n        \"Janeway\",\n        \"Kirk\",\n        \"Archer\",\n        \"Georgiou\"\n    ]\n\n    if(names.includes(inputText)) {\n        alert(\"Welcome, Captain!\")\n    }\n};\n\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { checkForName } from './js/nameChecker'\nimport { handleSubmit } from './js/formHandler'\n\nconsole.log(checkForName);\n\nalert(\"I EXIST\")\n"],"names":["handleSubmit","event","preventDefault","formText","document","getElementById","value","checkForName","console","log","fetch","then","res","json","innerHTML","message","inputText","names","includes","alert"],"sourceRoot":""}